---
import { Icon } from "astro-icon/components";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import { LanguageList } from "~/i18n/ui";
import { useTranslations } from "~/i18n/utils";
import type { NavItem } from "~/types";
import BlackHoleLogo from "~/components/blackHoleLogo.astro";
const currentLang = Astro.currentLocale || "en";
const currentPath = Astro.url.pathname;

// path to redirect to the same page in the target language
function getLocalizedPath(targetLang: string) {
  // For English, always return the main route '/'
  if (targetLang === 'en') {
    return '/';
  }
  
  // For Spanish, add the language prefix to the current path
  const segments = currentPath.split('/').filter(Boolean);
  let pagePath;
  
  // If the first segment is a language code (es), remove it to get the base path
  if (segments.length > 0 && segments[0] === 'es') {
    pagePath = '/' + segments.slice(1).join('/');
  } else {
    pagePath = currentPath;
  }
  
  return `/${targetLang}${pagePath}`;
}

const translateLabels = useTranslations(
  currentLang as keyof typeof LanguageList,
);

const navItems: Array<NavItem> = [
  { title: translateLabels('nav.home'), url: currentLang === 'en' ? '/' : `/${currentLang}` },
  { title: translateLabels('nav.services'), url: currentLang === 'en' ? '/#features' : `/${currentLang}/#features` },
  { title: translateLabels('nav.benefits'), url: currentLang === 'en' ? '/#benefits' : `/${currentLang}/#benefits` },
  { title: translateLabels('nav.showcase'), url: currentLang === 'en' ? '/#showcase' : `/${currentLang}/#showcase` },
  { title: translateLabels('nav.about'), url: currentLang === 'en' ? '/about' : `/${currentLang}/about` },
];
---

<header
  id="page-header"
  class="absolute bottom-0 z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-white"
>
  <a class="flex items-center gap-3 hover:!text-default" href="/">
    <h1 class="sr-only">Hontech</h1>
    <BlackHoleLogo />
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      
      <!-- Selector de idioma con banderas -->
      <div class="language-selector relative">
        <button 
          id="language-toggle" 
          class="flex items-center space-x-1 bg-transparent border border-white/20 rounded px-2 py-1 text-sm text-black dark:text-white"
          aria-label="Change language"
        >
          <!-- Bandera del idioma actual -->
          {currentLang === 'en' ? (
            <svg class="w-5 h-3.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30">
              <clipPath id="a">
                <path d="M0 0v30h60V0z"/>
              </clipPath>
              <clipPath id="b">
                <path d="M30 15h30v15zv15H0zH0V0zV0h30z"/>
              </clipPath>
              <g clip-path="url(#a)">
                <path d="M0 0v30h60V0z" fill="#012169"/>
                <path d="M0 0l60 30m0-30L0 30" stroke="#fff" stroke-width="6"/>
                <path d="M0 0l60 30m0-30L0 30" clip-path="url(#b)" stroke="#C8102E" stroke-width="4"/>
                <path d="M30 0v30M0 15h60" stroke="#fff" stroke-width="10"/>
                <path d="M30 0v30M0 15h60" stroke="#C8102E" stroke-width="6"/>
              </g>
            </svg>
          ) : (
            <svg class="w-5 h-3.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 500">
              <rect width="750" height="500" fill="#c60b1e"/>
              <rect width="750" height="250" fill="#ffc400" y="125"/>
            </svg>
          )}
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
          </svg>
        </button>
        
        <!-- Menú desplegable -->
        <div id="language-dropdown" class="absolute mt-1 right-0 w-20 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded shadow-lg hidden z-10">
          <a href={currentLang === 'en' ? currentPath : getLocalizedPath('en')} class="flex items-center p-2 hover:bg-gray-100 dark:hover:bg-gray-700">
            <svg class="w-5 h-3.5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30">
              <clipPath id="a2">
                <path d="M0 0v30h60V0z"/>
              </clipPath>
              <clipPath id="b2">
                <path d="M30 15h30v15zv15H0zH0V0zV0h30z"/>
              </clipPath>
              <g clip-path="url(#a2)">
                <path d="M0 0v30h60V0z" fill="#012169"/>
                <path d="M0 0l60 30m0-30L0 30" stroke="#fff" stroke-width="6"/>
                <path d="M0 0l60 30m0-30L0 30" clip-path="url(#b2)" stroke="#C8102E" stroke-width="4"/>
                <path d="M30 0v30M0 15h60" stroke="#fff" stroke-width="10"/>
                <path d="M30 0v30M0 15h60" stroke="#C8102E" stroke-width="6"/>
              </g>
            </svg>
            <span class="text-sm">EN</span>
          </a>
          <a href={currentLang === 'es' ? currentPath : getLocalizedPath('es')} class="flex items-center p-2 hover:bg-gray-100 dark:hover:bg-gray-700">
            <svg class="w-5 h-3.5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 500">
              <rect width="750" height="500" fill="#c60b1e"/>
              <rect width="750" height="250" fill="#ffc400" y="125"/>
            </svg>
            <span class="text-sm">ES</span>
          </a>
        </div>
      </div>
      
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden"
        aria-label="Navigation"
      >
        <Icon name="mdi:menu" class="size-8" />
      </button>
      <ThemeSwitcher />
    </div>
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed inset-0 bg-default px-8 py-4 text-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon name="mdi:close" class="size-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Icon name="logomark" class="size-16" />
          </div>
          <nav>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
          
          <!-- Selector de idioma para móvil con banderas -->
          <div class="flex justify-center py-4">
            <div class="language-selector-mobile relative">
              <button 
                id="mobile-language-toggle" 
                class="flex items-center space-x-2 bg-transparent border border-current rounded px-3 py-2"
                aria-label="Change language"
              >
                {currentLang === 'en' ? (
                  <>
                    <svg class="w-6 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30">
                      <clipPath id="a3">
                        <path d="M0 0v30h60V0z"/>
                      </clipPath>
                      <clipPath id="b3">
                        <path d="M30 15h30v15zv15H0zH0V0zV0h30z"/>
                      </clipPath>
                      <g clip-path="url(#a3)">
                        <path d="M0 0v30h60V0z" fill="#012169"/>
                        <path d="M0 0l60 30m0-30L0 30" stroke="#fff" stroke-width="6"/>
                        <path d="M0 0l60 30m0-30L0 30" clip-path="url(#b3)" stroke="#C8102E" stroke-width="4"/>
                        <path d="M30 0v30M0 15h60" stroke="#fff" stroke-width="10"/>
                        <path d="M30 0v30M0 15h60" stroke="#C8102E" stroke-width="6"/>
                      </g>
                    </svg>
                    <span>English</span>
                  </>
                ) : (
                  <>
                    <svg class="w-6 h-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 500">
                      <rect width="750" height="500" fill="#c60b1e"/>
                      <rect width="750" height="250" fill="#ffc400" y="125"/>
                    </svg>
                    <span>Español</span>
                  </>
                )}
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                </svg>
              </button>
              
              <!-- Menú desplegable móvil -->
              <div id="mobile-language-dropdown" class="absolute mt-1 left-0 w-32 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded shadow-lg hidden z-10">
                <a href={currentLang === 'en' ? currentPath : getLocalizedPath('en')} class="flex items-center p-2 hover:bg-gray-100 dark:hover:bg-gray-700">
                  <svg class="w-5 h-3.5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 30">
                    <clipPath id="a4">
                      <path d="M0 0v30h60V0z"/>
                    </clipPath>
                    <clipPath id="b4">
                      <path d="M30 15h30v15zv15H0zH0V0zV0h30z"/>
                    </clipPath>
                    <g clip-path="url(#a4)">
                      <path d="M0 0v30h60V0z" fill="#012169"/>
                      <path d="M0 0l60 30m0-30L0 30" stroke="#fff" stroke-width="6"/>
                      <path d="M0 0l60 30m0-30L0 30" clip-path="url(#b4)" stroke="#C8102E" stroke-width="4"/>
                      <path d="M30 0v30M0 15h60" stroke="#fff" stroke-width="10"/>
                      <path d="M30 0v30M0 15h60" stroke="#C8102E" stroke-width="6"/>
                    </g>
                  </svg>
                  <span>English</span>
                </a>
                <a href={currentLang === 'es' ? currentPath : getLocalizedPath('es')} class="flex items-center p-2 hover:bg-gray-100 dark:hover:bg-gray-700">
                  <svg class="w-5 h-3.5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 750 500">
                    <rect width="750" height="500" fill="#c60b1e"/>
                    <rect width="750" height="250" fill="#ffc400" y="125"/>
                  </svg>
                  <span>Español</span>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");
  
  // Elementos del selector de idioma
  const languageToggle = document.querySelector("#language-toggle");
  const languageDropdown = document.querySelector("#language-dropdown");
  const mobileLanguageToggle = document.querySelector("#mobile-language-toggle");
  const mobileLanguageDropdown = document.querySelector("#mobile-language-dropdown");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");
  invariant(languageToggle, "languageToggle should not be null");
  invariant(languageDropdown, "languageDropdown should not be null");
  invariant(mobileLanguageToggle, "mobileLanguageToggle should not be null");
  invariant(mobileLanguageDropdown, "mobileLanguageDropdown should not be null");

 
  languageToggle.addEventListener("click", () => {
    languageDropdown.classList.toggle("hidden");
  });
  
  mobileLanguageToggle.addEventListener("click", () => {
    mobileLanguageDropdown.classList.toggle("hidden");
  });
  
  document.addEventListener("click", (e) => {
    if (
      !languageToggle.contains(e.target as Node) && 
      !languageDropdown.contains(e.target as Node)
    ) {
      languageDropdown.classList.add("hidden");
    }
    
    if (
      !mobileLanguageToggle.contains(e.target as Node) && 
      !mobileLanguageDropdown.contains(e.target as Node)
    ) {
      mobileLanguageDropdown.classList.add("hidden");
    }
  });

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply border-default bg-default text-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>